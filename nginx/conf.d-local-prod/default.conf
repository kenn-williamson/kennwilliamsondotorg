# Local Production Configuration
# For testing production configs locally with self-signed certificates
# Includes localhost for easier testing

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name kennwilliamson.org www.kennwilliamson.org localhost;
    
    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS main server - Local Production
server {
    listen 443 ssl;
    http2 on;  # Fixed deprecated syntax
    server_name kennwilliamson.org www.kennwilliamson.org localhost;
    
    # DNS resolver for Docker network (Docker's internal DNS)
    resolver 127.0.0.11 valid=30s ipv6=off;
    
    # SSL configuration - Self-signed certificates for local testing
    ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    
    # SSL optimization
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Note: Rate limiting zones defined in nginx.local-prod.conf http block
    
    # API routes to backend
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        set $backend_upstream backend:8080;
        proxy_pass http://$backend_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # CORS headers for local testing
        add_header Access-Control-Allow-Origin "https://localhost,https://kennwilliamson.org" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
    }
    
    # Health check endpoints
    location /health {
        set $backend_upstream backend:8080;
        proxy_pass http://$backend_upstream;
        proxy_set_header Host $host;
        access_log off;
    }
    
    # Frontend application (catch-all)
    location / {
        limit_req zone=general burst=10 nodelay;
        
        set $frontend_upstream frontend:3000;
        proxy_pass http://$frontend_upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # WebSocket support for HMR (useful for development testing)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
}